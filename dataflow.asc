Programmation avec le DataFlow
==============================

*****************

Le dataflow est un mode de programmation pour lequel un programme est représenté sous la forme d'un graphe; les noeuds du graphe représentant les composants du programme (widgets, …) et les arcs représentant le chemin de circulation des données entre les composants.

Un noeud (composant) à des entrées et des sorties (propriétés d'entrée ou de sortie des composants) et réalise un calcul. Lors que les entrées d'un noeud sont modifiées, alors le noeud effectue son calcul et modifie éventuellement ses propriétés de sortie. Si elles sont modifiées, leurs valeurs sont propagées aux autres noeuds du graphe.

Ce type de programmation ne génère pas d'effet de bords et est facilement descriptible visuellement.

*****************


Table des matières
------------------




Construction
------------
var d = new DataFlow ();

Connection
----------

Simple connection
~~~~~~~~~~~~~~~~~

d.connect (rect1, "width", rect2, "height")
=>
rect2.height <= rect1.width

Destructuring connection
~~~~~~~~~~~~~~~~~~~~~~~~

d.connect (rect1, ['width', 'height'], rect2, ['height, 'width'])
=>
rect2.height <= rect1.width
rect2.width <= rect1.height

Multiplexer
-----------

d.connect (rect1, ['width', 'height'], circle, 'r', surface)

function surface (values)
{
  return Math.sqrt (values[0] * values[1] / Math.PI);
}

Demultiplexer
-------------

d.connect (obj1, out1, obj1, [in1, in2], range)

function range (value)
{
  return [value - 10, value + 10];
}


API
---

Construction
~~~~~~~~~~~~
var d = new DataFlow ();

Connect
~~~~~~~
d.connect (obj, propertyName, obj, propertyName)
=>
obj2.p1 <= obj1.p1

Destructuring connect
~~~~~~~~~~~~~~~~~~~~~
d.connect (obj, [propertyName, ...], obj, [propertyName, ...])
=>
obj2 [p1, p2, ...] <= obj1 [p1, p2, ...]

...

Connect + transformation
~~~~~~~~~~~~~~~~~~~~~~~~~

d.connect (obj, propertyName | [propertyName, ...], obj, propertyName | [propertyName, ...], function)

Simple connect with function transform
++++++++++++++++++++++++++++++++++++++
obj2.p1 <= function (obj1.p1)

Destructuring connect with function transform
+++++++++++++++++++++++++++++++++++++++++++++

obj2 [p1, p2, ...] <= function (obj1 [p1, p2, ...])








